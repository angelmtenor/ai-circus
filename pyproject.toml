# Project metadata and configuration for the AI Circus project
# Author: Angel Martinez-Tenor, 2025. Adapted from https://github.com/angelmtenor/ds-template

[project]
name = "ai-circus"
version = "0.1.0"
authors = [{ name = "Angel", email = "angelmtenor@gmail.com" }]
license = { text = "MIT" }
description = "Smart AI Building Block"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "httpx>=0.28.1",
    "loguru>=0.7.3",
    "psutil>=7.0.0",
    "py-cpuinfo>=9.0.0",
    "python-dotenv>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "bandit>=1.8.3",
    "debugpy>=1.8.14",
    "jupyter>=1.1.1",
    "pre-commit>=4.2.0",
    "pyinstrument>=5.0.1",
    "pyright>=1.1.400",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.8",
    "twine>=6.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pyright]
venv = ".venv"
venvPath = "."
exclude = ["**/notebooks_extra", "**/__pycache__", "**/.venv"]
# typeCheckingMode = "strict"  # Uncomment if stricter typing is desired
# reportMissingTypeStubs = false

[tool.ruff]
line-length = 120
target-version = "py313"
extend-exclude = [".venv"] # Exclude virtualenv

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"
quote-style = "double"

[tool.ruff.lint]
select = [
    "F",   # Pyflakes: Logical errors
    "E",   # Pycodestyle: Style errors
    "W",   # Pycodestyle: Style warnings
    "D",   # pydocstyle: Docstring conventions
    "B",   # flake8-bugbear: Potential bugs
    "I",   # isort: Import sorting (enables isort rules)
    "N",   # PEP8 Naming
    "UP",  # pyupgrade: Syntax upgrades
    "C90", # mccabe: Code complexity
    "Q",   # flake8-quotes: Quote consistency
]
ignore = [
    "B007", # Unused loop variable
    "B008", # False positive with dependency injection
    "C901", # Function complexity
    "D105", # Missing docstring in magic method
    "D203", # Docstring style conflicts
    "D205", # Blank line between summary and description
    "D212", # Docstring style conflicts
    "D415", # Missing trailing punctuation in docstring
]

[tool.ruff.lint.per-file-ignores]
"**/notebooks_extra/**" = ["ALL"]             # Exploratory notebooks, no strict linting
"**.ipynb" = ["E501", "D103", "D101", "E402"]
"**/__init__.py" = ["D104"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.bandit]
skips = [
    "B101", # Assert statements (used for testing)
    "B104", # Hardcoded IPs (not applicable)
    "B301", # Pickle (safe in context)
    "B403", # Import pickle (safe in context)
    "B404", # Subprocess (controlled usage)
    "B602", # Subprocess calls (controlled)
    "B603", # Subprocess without shell (controlled)
    "B607", # Start process (controlled)
    "B608", # SQL injection (not applicable)
]
targets = ["src", "tests"] # Specify directories to scan
exclude_dirs = [".venv"] # Exclude virtualenv

[tool.pytest.ini_options]
addopts = "--cov=src --cov-report=html"
testpaths = ["tests"]
